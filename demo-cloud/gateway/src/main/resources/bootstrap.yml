nacos:
  server-address: 127.0.0.1:8848
  username: nacos
  password: nacos
  # 是否为临时实例，默认为 true
  ephemeral: true
  namespace: demo
  group: DEFAULT_GROUP
  file-extension: yaml


# Tomcat
server:
  version: 1.0.0
  port: 18080

# Spring
spring:
  #  LOWER_CAMEL_CASE    userName    默认策略
  #  KEBAB_CASE    user-name
  #  LOWER_CASE    username
  #  SNAKE_CASE    user_name
  #  UPPER_CAMEL_CASE    UserName
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
  application:
    # 应用名称
    name: demo-gateway
  profiles:
    # 环境配置
    active: dev
  cloud:
    nacos:
      discovery:
        # 服务注册地址
        server-addr: ${nacos.server-address}
        # 用户名
        username: ${nacos.username}
        # 密码
        password: ${nacos.password}
        # 命名空间
        namespace: ${nacos.namespace}
        # 是否为临时实例，默认为 true
        ephemeral: ${nacos.ephemeral}
      #        group: ${nacos.group} # 使用的 Nacos 配置分组，默认为 DEFAULT_GROUP
      config:
        bootstrap:
          enable: true
        # 服务注册地址
        server-addr: ${nacos.server-address}
        # 用户名
        username: ${nacos.username}
        # 密码
        password: ${nacos.password}
        # 命名空间
        namespace: ${nacos.namespace}
        # 配置文件格式zd
        file-extension: ${nacos.file-extension}
        # 共享配置
        shared-configs:
          - data-id: ${spring.application.name}.${nacos.file-extension}
            group: ${nacos.group}
            refresh: true
          - data-id: ${spring.application.name}-${spring.profiles.active}.${nacos.file-extension}
            group: ${nacos.group}
            refresh: true
          - data-id: demo-common.${nacos.file-extension}
            group: ${nacos.group}
            refresh: true
          - data-id: demo-common-${spring.profiles.active}.${nacos.file-extension}
            group: ${nacos.group}
            refresh: true

  data:
    # redis配置
    redis:
      # Redis数据库索引（默认为0）
      database: 11
      # Redis服务器地址
      host: 127.0.0.1
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: '000000'
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 200
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0

# sa-token 配置
sa-token:
  # token 名称 (同时也是 cookie 名称)
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

wlpiaoyi:
  ee:
    cors:
      data:
        charset_name: 'UTF-8'
        snowflake:
          workerId: 1
          datacenterId: 1
          timerEpoch: 1729087588173

